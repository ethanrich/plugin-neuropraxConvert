## DO NOT EDIT!  Generated automatically from strfind.cc by Make.
%!assert (strfind ("abababa", "aba"), [1, 3, 5])
%!assert (strfind ("abababa", "aba", "overlaps", false), [1, 5])
%!assert (strfind ("abababa", "aba", "forcecelloutput", false), [1, 3, 5])
%!assert (strfind ("abababa", "aba", "forcecelloutput", true), {[1, 3, 5]})
%!assert (strfind ({"abababa", "bla", "bla"}, "a"), {[1, 3, 5, 7], 3, 3})
%!assert (strfind ({"abababa", "bla", "bla"}, "a", "forcecelloutput", false), {[1, 3, 5, 7], 3, 3})
%!assert (strfind ({"abababa", "bla", "bla"}, "a", "forcecelloutput", true), {[1, 3, 5, 7], 3, 3})
%!assert (strfind ("Linux _is_ user-friendly. It just isn't ignorant-friendly or idiot-friendly.", "friendly"), [17, 50, 68])
%!assert (strfind ("abc", ""), [])
%!assert (strfind ("abc", {"", "b", ""}), {[], 2, []})
%!assert (strfind ({"abc", "def"}, ""), {[], []})
%!error strfind ()
%!error strfind ("foo", "bar", 1)
%!error <unknown option: foobar> strfind ("foo", 100, "foobar", 1)
%!error <each element of CELLSTR must be a string> strfind ({"A", 1}, "foo")
%!error <first argument must be a string> strfind (100, "foo")
%!error <PATTERN must be a string> strfind ("foo", 100)
%!assert (strrep ("This is a test string", "is", "&%$"),
%!                "Th&%$ &%$ a test string")
%!assert (strrep ("abababc", "abab", "xyz"), "xyzxyzc")
%!assert (strrep ("abababc", "abab", "xyz", "overlaps", false), "xyzabc")
%!assert (strrep ({"Hello World"; "Goodbye World"}, "World", "Jane"),
%!                {"Hello Jane"; "Goodbye Jane"})
%!assert (strrep (char ("Hello World", "Goodbye World"), "World", "Jane"),
%!                char ("Hello Jane", "Goodbye Jane"))
%!assert (size (strrep ("a", "a", "")), [0 0])
%!error strrep ()
%!error strrep ("A")
%!error strrep ("A", "B")
%!error strrep ("A", "B", "C", "D")
%!error strrep ("A", "B", "C", "D", "E", "F")
%!error <invalid optional argument> strrep ("A", "B", "C", 3, true)
%!error <invalid optional argument> strrep ("A", "B", "C", "str", ones (2,2))
%!error <unknown option: foobar> strrep ("A", "B", "C", "foobar", true)
%!error <each element of S must be a string> strrep ({"A", 1.0}, "B", "C")
%!error <S must be a string or cell array of strings> strrep (1.0, "B", "C")
%!error <PTN and REP arguments must be strings> strrep ("A", 1.0, "C")
%!error <PTN and REP arguments must be strings> strrep ("A", "B", 1.0)
