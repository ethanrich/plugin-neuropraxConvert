\input texinfo @c -*-texinfo-*-
@c Copyright (c) 2022, John Donoghue <john.donoghue@ieee.org>
@c Octave Sockets - Socket functions for GNU octave.

@c For manually generating the documentation use
@c   LANGUAGE=en makeinfo --html --no-split dicom.texi

@c %*** Start of HEADER
@setfilename sockets.info
@settitle Octave Sockets - Socket functions for GNU octave.
@afourpaper
@paragraphindent 0
@finalout
@set VERSION 1.4.0
@set COPYRIGHT_DATE 2022
@c @afourwide
@c %*** End of the HEADER

@include macros.texi

@c %*** Start of TITLEPAGE
@titlepage
@title Sockets Toolkit @value{VERSION}
@subtitle Socket functions for @acronym{GNU} Octave.
@author The Octave-Forge community
@page
@vskip 0pt plus 1filll
Copyright @copyright{} @value{COPYRIGHT_DATE}

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the same conditions as for modified versions.

@page
@heading Distribution
The @acronym{GNU} Octave Sockets package is @dfn{free} software.
Free software is a matter of the users' freedom to run, copy, distribute,
study, change and improve the software.
This means that everyone is free to use it and free to redistribute it
on certain conditions.  The @acronym{GNU} Octave Sockets package
is not, however, in the public domain.  It is copyrighted and there are
restrictions on its distribution, but the restrictions are designed to
ensure that others will have the same freedom to use and redistribute
Octave that you have.  The precise conditions can be found in the
@acronym{GNU} General Public License that comes with the @acronym{GNU}
Octave Sockets package and that also appears in @ref{Copying}.

To download a copy of the @acronym{GNU} Octave Sockets package, please visit
@url{http://octave.sourceforge.net/sockets/}.

@end titlepage
@c %*** End of TITLEPAGE

@c %*** Start of BODY
@contents
@ifnottex
@node Top
@top Introduction
The Sockets toolkit is a set of socket routines for GNU Octave
@end ifnottex

@menu
* Installing and loading::    Installing and loading the Sockets toolkit
* Basic Usage Overview::      Basic Usage Overview
* Function Reference::        Sockets toolkit functions
* Copying::                   Copying
* Index::                     Index
@end menu

@c -------------------------------------------------------------------------
@node Installing and loading
@chapter Installing and loading
@cindex Installing and loading

The Sockets toolkit must be installed and then loaded to be used.

It can be installed in @acronym{GNU} Octave directly from octave-forge,
or can be installed in an off-line mode via a downloaded tarball.

The toolkit must be then be loaded once per each @acronym{GNU} Octave session in order to use its functionality.

@section Online Direct install
@cindex Online install
With an internet connection available, the Sockets package can be installed from
octave-forge using the following command within @acronym{GNU} Octave:

@example
pkg install -forge sockets
@end example

The latest released version of the toolkit will be downloaded and installed.

@section Off-line install
@cindex Off-line install
With the Sockets toolkit package already downloaded, and in the current directory when running
@acronym{GNU} Octave, the package can be installed using the following command within @acronym{GNU} Octave:

@example
pkg install sockets-@value{VERSION}.tar.gz
@end example

@section Loading
@cindex Loading
Regardless of the method of installing the Sockets toolkit, in order to use its functions,
the toolkit must be loaded using the pkg load command:

@example
pkg load sockets
@end example

The toolkit must be loaded on each @acronym{GNU} Octave session.

@c -------------------------------------------------------------------------
@node Basic Usage Overview
@chapter Basic Usage Overview
@cindex Basic Usage Overview

The sockets toolkit attempts to use function names similar to the standard UNIX socket
function naming, so functions such as socket, connect, bind, read, write etc are
available and in general would follow the same flow as if being programmed in C.

@example
# example socket connect and request a HTML page info

s = socket(AF_INET, SOCK_STREAM, 0);
if s < 0
  error ("Could not create a socket")
endif

addr = struct("addr", "google.com", "port", 80);
if connect(s, addr) < 0
  error ("Could not create a socket")
endif

# html request
send(s, "HEAD / HTTP/1.0\r\n\r\n")

# read data back
[d, l] = recv(s, 2000);
if d == -1
  error ("Error reading data");
endif

# display the data in human readable form
char(d)

# disconnect socket
disconnect(s);

@end example

@c -------------------------------------------------------------------------
@node Function Reference
@chapter Function Reference
@cindex Function Reference

The functions currently available in the Dicom toolkit are described below;

@include functions.texi

@c -------------------------------------------------------------------------

@include gpl.texi

@c -------------------------------------------------------------------------
@node Index 
@unnumbered Index 
 
@printindex cp
 
@bye
