// DO NOT EDIT -- generated by mk-ops.awk
#if ! defined (octave_smx_m_scm_h)
#define octave_smx_m_scm_h 1
#include "octave-config.h"
#include "CMatrix.h"
#include "CSparse.h"
#include "dMatrix.h"
#include "mx-m-cs.h"
#include "mx-cs-m.h"
#include "mx-m-cm.h"
#include "mx-cm-m.h"
#include "mx-nda-cs.h"
#include "mx-cs-nda.h"
#include "Sparse-op-defs.h"
  extern OCTAVE_API ComplexMatrix operator + (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API ComplexMatrix operator - (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API SparseComplexMatrix product (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API SparseComplexMatrix quotient (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_lt (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_le (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_ge (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_gt (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_eq (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_ne (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_and (const Matrix&, const SparseComplexMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_or (const Matrix&, const SparseComplexMatrix&);
#endif
