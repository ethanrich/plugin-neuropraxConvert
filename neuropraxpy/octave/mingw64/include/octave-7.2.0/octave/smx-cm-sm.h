// DO NOT EDIT -- generated by mk-ops.awk
#if ! defined (octave_smx_cm_sm_h)
#define octave_smx_cm_sm_h 1
#include "octave-config.h"
#include "CMatrix.h"
#include "CSparse.h"
#include "dSparse.h"
#include "mx-cm-s.h"
#include "mx-s-cm.h"
#include "mx-cm-m.h"
#include "mx-m-cm.h"
#include "mx-cnda-s.h"
#include "mx-s-cnda.h"
#include "Sparse-op-defs.h"
  extern OCTAVE_API ComplexMatrix operator + (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API ComplexMatrix operator - (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API SparseComplexMatrix product (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API SparseComplexMatrix quotient (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_lt (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_le (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_ge (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_gt (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_eq (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_ne (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_and (const ComplexMatrix&, const SparseMatrix&);
  extern OCTAVE_API SparseBoolMatrix mx_el_or (const ComplexMatrix&, const SparseMatrix&);
#endif
