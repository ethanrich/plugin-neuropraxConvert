## DO NOT EDIT! Generated from bwlabeln.cc
%!shared a2d, a3d
%! a2d = [1   0   0   0   0   0   1   0   0   1
%!        1   0   0   1   0   1   0   1   0   1
%!        1   0   1   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   1   0   0   0   0   0   0   0   0
%!        1   1   0   1   1   1   0   0   0   0
%!        1   1   0   1   0   0   0   1   0   0
%!        1   1   0   0   0   0   1   0   1   0
%!        1   1   0   0   0   0   0   0   0   0
%!        1   1   0   0   0   1   1   0   0   1];
%!
%! a3d = a2d;
%! a3d(:,:,2) = [
%!        0   0   0   0   0   0   0   0   0   0
%!        1   0   0   1   1   0   0   1   0   0
%!        0   0   0   1   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   1   0   0   0   0   0   0   0   0
%!        1   1   0   0   1   1   0   0   0   0
%!        1   1   0   1   0   0   0   0   0   0
%!        1   0   0   0   0   0   1   0   0   0
%!        0   1   0   0   0   0   0   0   0   1
%!        1   1   0   0   0   0   1   0   0   0];
%!
%! a3d(:,:,3) = [
%!        1   0   0   0   0   0   0   0   0   0
%!        0   1   0   1   1   0   0   1   0   0
%!        0   0   0   1   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   0   0   1   1   1   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        1   0   0   0   0   0   0   0   0   0
%!        1   1   0   0   0   0   0   0   0   1
%!        1   1   0   0   0   0   0   0   0   0];
%!test
%! label2dc4 = [
%!        1   0   0   0   0   0   8   0   0  13
%!        1   0   0   4   0   6   0  10   0  13
%!        1   0   3   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   2   0   0   0   0   0   0   0   0
%!        2   2   0   5   5   5   0   0   0   0
%!        2   2   0   5   0   0   0  11   0   0
%!        2   2   0   0   0   0   9   0  12   0
%!        2   2   0   0   0   0   0   0   0   0
%!        2   2   0   0   0   7   7   0   0  14];
%! assert (bwlabeln (a2d, 4), label2dc4)
%! assert (bwlabeln (a2d, [0 1 0; 1 1 1; 0 1 0]), label2dc4)
%! assert (bwlabeln (a2d, conndef (2, "minimal")), label2dc4)
%! assert (bwlabeln (a2d, conndef (3, "minimal")), label2dc4)
%!test
%! label2dc8 = [
%!        1   0   0   0   0   0   5   0   0   8
%!        1   0   0   3   0   5   0   5   0   8
%!        1   0   3   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   2   0   0   0   0   0   0   0   0
%!        2   2   0   4   4   4   0   0   0   0
%!        2   2   0   4   0   0   0   7   0   0
%!        2   2   0   0   0   0   7   0   7   0
%!        2   2   0   0   0   0   0   0   0   0
%!        2   2   0   0   0   6   6   0   0   9];
%! assert (bwlabeln (a2d, 8), label2dc8)
%! assert (bwlabeln (a2d, ones (3)), label2dc8)
%! assert (bwlabeln (a2d, conndef (2, "maximal")), label2dc8)
%! assert (bwlabeln (a2d, conndef (3, "maximal")), label2dc8)
%!test
%! label3dc8 = [
%!        1   0   0   0   0   0   5   0   0   8
%!        1   0   0   3   0   5   0   5   0   8
%!        1   0   3   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   2   0   0   0   0   0   0   0   0
%!        2   2   0   4   4   4   0   0   0   0
%!        2   2   0   4   0   0   0   7   0   0
%!        2   2   0   0   0   0   7   0   7   0
%!        2   2   0   0   0   0   0   0   0   0
%!        2   2   0   0   0   6   6   0   0   9];
%! label3dc8(:,:,2) = [
%!        0   0   0   0   0   0   0   0   0   0
%!       10   0   0  12  12   0   0  16   0   0
%!        0   0   0  12   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0  11   0   0   0   0   0   0   0   0
%!       11  11   0   0  13  13   0   0   0   0
%!       11  11   0  13   0   0   0   0   0   0
%!       11   0   0   0   0   0  14   0   0   0
%!        0  11   0   0   0   0   0   0   0  17
%!       11  11   0   0   0   0  15   0   0   0];
%! label3dc8(:,:,3) = [
%!       18   0   0   0   0   0   0   0   0   0
%!        0  18   0  20  20   0   0  22   0   0
%!        0   0   0  20   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   0   0  21  21  21   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!       19   0   0   0   0   0   0   0   0   0
%!       19  19   0   0   0   0   0   0   0  23
%!       19  19   0   0   0   0   0   0   0   0];
%! assert (bwlabeln (a3d, 8), label3dc8)
%! assert (bwlabeln (a3d, ones (3, 3)), label3dc8)
%! assert (bwlabeln (a3d, conndef (2, "maximal")), label3dc8)
%!test
%! label3dc26 = [
%!        1   0   0   0   0   0   3   0   0   7
%!        1   0   0   3   0   3   0   3   0   7
%!        1   0   3   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   2   0   0   0   0   0   0   0   0
%!        2   2   0   4   4   4   0   0   0   0
%!        2   2   0   4   0   0   0   6   0   0
%!        2   2   0   0   0   0   6   0   6   0
%!        2   2   0   0   0   0   0   0   0   0
%!        2   2   0   0   0   5   5   0   0   6];
%! label3dc26(:,:,2) = [
%!        0   0   0   0   0   0   0   0   0   0
%!        1   0   0   3   3   0   0   3   0   0
%!        0   0   0   3   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   2   0   0   0   0   0   0   0   0
%!        2   2   0   0   4   4   0   0   0   0
%!        2   2   0   4   0   0   0   0   0   0
%!        2   0   0   0   0   0   6   0   0   0
%!        0   2   0   0   0   0   0   0   0   6
%!        2   2   0   0   0   0   5   0   0   0];
%! label3dc26(:,:,3) = [
%!        1   0   0   0   0   0   0   0   0   0
%!        0   1   0   3   3   0   0   3   0   0
%!        0   0   0   3   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   0   0   4   4   4   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        2   0   0   0   0   0   0   0   0   0
%!        2   2   0   0   0   0   0   0   0   6
%!        2   2   0   0   0   0   0   0   0   0];
%! assert (bwlabeln (a3d, 26), label3dc26)
%! assert (bwlabeln (a3d, ones (3, 3, 3)), label3dc26)
%! assert (bwlabeln (a3d, conndef (3, "maximal")), label3dc26)
%!test
%! label3dc18 = [
%!        1   0   0   0   0   0   3   0   0   7
%!        1   0   0   3   0   3   0   3   0   7
%!        1   0   3   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   2   0   0   0   0   0   0   0   0
%!        2   2   0   4   4   4   0   0   0   0
%!        2   2   0   4   0   0   0   6   0   0
%!        2   2   0   0   0   0   6   0   6   0
%!        2   2   0   0   0   0   0   0   0   0
%!        2   2   0   0   0   5   5   0   0   8];
%! label3dc18(:,:,2) = [
%!        0   0   0   0   0   0   0   0   0   0
%!        1   0   0   3   3   0   0   3   0   0
%!        0   0   0   3   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   2   0   0   0   0   0   0   0   0
%!        2   2   0   0   4   4   0   0   0   0
%!        2   2   0   4   0   0   0   0   0   0
%!        2   0   0   0   0   0   6   0   0   0
%!        0   2   0   0   0   0   0   0   0   8
%!        2   2   0   0   0   0   5   0   0   0];
%! label3dc18(:,:,3) = [
%!        1   0   0   0   0   0   0   0   0   0
%!        0   1   0   3   3   0   0   3   0   0
%!        0   0   0   3   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   0   0   4   4   4   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        2   0   0   0   0   0   0   0   0   0
%!        2   2   0   0   0   0   0   0   0   8
%!        2   2   0   0   0   0   0   0   0   0];
%! assert (bwlabeln (a3d, 18), label3dc18)
%!test
%! label2dc3 = [
%!        1   0   0   0   0   0  11   0   0  17
%!        1   0   0   5   0   8   0  14   0  17
%!        1   0   4   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   3   0   0   0   0   0   0   0   0
%!        2   3   0   6   7   9   0   0   0   0
%!        2   3   0   6   0   0   0  15   0   0
%!        2   3   0   0   0   0  12   0  16   0
%!        2   3   0   0   0   0   0   0   0   0
%!        2   3   0   0   0  10  13   0   0  18];
%! assert (bwlabeln (a2d, [1 1 1]'), label2dc3)
%!
%! label3dc3 = label2dc3;
%! label3dc3(:,:,2) = [
%!        0   0   0   0   0   0   0   0   0   0
%!       19   0   0  24  26   0   0  31   0   0
%!        0   0   0  24   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0  22   0   0   0   0   0   0   0   0
%!       20  22   0   0  27  28   0   0   0   0
%!       20  22   0  25   0   0   0   0   0   0
%!       20   0   0   0   0   0  29   0   0   0
%!        0  23   0   0   0   0   0   0   0  32
%!       21  23   0   0   0   0  30   0   0   0];
%! label3dc3(:,:,3) = [
%!       33   0   0   0   0   0   0   0   0   0
%!        0  35   0  37  39   0   0  42   0   0
%!        0   0   0  37   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!        0   0   0  38  40  41   0   0   0   0
%!        0   0   0   0   0   0   0   0   0   0
%!       34   0   0   0   0   0   0   0   0   0
%!       34  36   0   0   0   0   0   0   0  43
%!       34  36   0   0   0   0   0   0   0   0];
%! assert (bwlabeln (a3d, [1 1 1]'), label3dc3)
%!test
%! label2dc1 = zeros (size (a2d));
%! label2dc1(a2d != 0) = 1:nnz (a2d);
%! assert (bwlabeln (a2d, [1]), label2dc1);
%! assert (bwlabeln (a2d, [0 1 0]'), label2dc1);
%!
%! label3dc1 = zeros (size (a3d));
%! label3dc1(a3d != 0) = 1:nnz (a3d);
%! assert (bwlabeln (a3d, [1]), label3dc1);
%! assert (bwlabeln (a3d, [0 1 0]'), label3dc1);
%!shared in
%! in = rand (10) > 0.8;
%!assert (bwlabel (in, 4), bwlabeln (in, 4));
%!assert (bwlabel (in, 4), bwlabeln (in, [0 1 0; 1 1 1; 0 1 0]));
%!assert (bwlabel (in, 8), bwlabeln (in, 8));
%!assert (bwlabel (in, 8), bwlabeln (in, [1 1 1; 1 1 1; 1 1 1]));
%!assert (bwlabel (logical ([0 1 0; 0 0 0; 1 0 1])), [0 2 0; 0 0 0; 1 0 3]);
%!assert (bwlabel ([0 1 0; 0 0 0; 1 0 1]), [0 2 0; 0 0 0; 1 0 3]);
%!assert (bwlabel ([0 -1 0; 0 0 0; 5 0 0.2]), [0 2 0; 0 0 0; 1 0 3]);
%!shared in, out
%!
%! in = [  0   1   1   0   0   1   0   0   0   0
%!         0   0   0   1   0   0   0   0   0   1
%!         0   1   1   0   0   0   0   0   1   1
%!         1   0   0   0   0   0   0   1   0   0
%!         0   0   0   0   0   1   1   0   0   0
%!         0   0   0   0   0   0   0   0   0   0
%!         0   0   0   1   0   0   0   0   0   0
%!         0   0   0   0   1   1   0   1   0   0
%!         0   0   0   1   0   1   0   1   0   1
%!         1   1   0   0   0   0   0   1   1   0];
%!
%! out = [ 0   3   3   0   0   9   0   0   0   0
%!         0   0   0   5   0   0   0   0   0  13
%!         0   4   4   0   0   0   0   0  13  13
%!         1   0   0   0   0   0   0  11   0   0
%!         0   0   0   0   0  10  10   0   0   0
%!         0   0   0   0   0   0   0   0   0   0
%!         0   0   0   6   0   0   0   0   0   0
%!         0   0   0   0   8   8   0  12   0   0
%!         0   0   0   7   0   8   0  12   0  14
%!         2   2   0   0   0   0   0  12  12   0];
%!assert (nthargout ([1 2], @bwlabel, in, 4), {out, 14});
%!assert (nthargout ([1 2], @bwlabel, logical (in), 4), {out, 14});
%!
%! out = [ 0   3   3   0   0   7   0   0   0   0
%!         0   0   0   3   0   0   0   0   0  11
%!         0   4   4   0   0   0   0   0  11  11
%!         1   0   0   0   0   0   0   9   0   0
%!         0   0   0   0   0   8   8   0   0   0
%!         0   0   0   0   0   0   0   0   0   0
%!         0   0   0   5   0   0   0   0   0   0
%!         0   0   0   0   5   5   0  10   0   0
%!         0   0   0   6   0   5   0  10   0  12
%!         2   2   0   0   0   0   0  10  10   0];
%!assert (nthargout ([1 2], @bwlabel, in, 6), {out, 12});
%!assert (nthargout ([1 2], @bwlabel, logical (in), 6), {out, 12});
%!
%! ## The labeled image is not the same as Matlab, but they are
%! ## labeled correctly. Do we really need to get them properly
%! ## ordered? (the algorithm in bwlabeln does it)
%! mout = [0   1   1   0   0   4   0   0   0   0
%!         0   0   0   1   0   0   0   0   0   5
%!         0   1   1   0   0   0   0   0   5   5
%!         1   0   0   0   0   0   0   5   0   0
%!         0   0   0   0   0   5   5   0   0   0
%!         0   0   0   0   0   0   0   0   0   0
%!         0   0   0   3   0   0   0   0   0   0
%!         0   0   0   0   3   3   0   6   0   0
%!         0   0   0   3   0   3   0   6   0   6
%!         2   2   0   0   0   0   0   6   6   0];
%!
%! out = [ 0   2   2   0   0   4   0   0   0   0
%!         0   0   0   2   0   0   0   0   0   5
%!         0   2   2   0   0   0   0   0   5   5
%!         2   0   0   0   0   0   0   5   0   0
%!         0   0   0   0   0   5   5   0   0   0
%!         0   0   0   0   0   0   0   0   0   0
%!         0   0   0   3   0   0   0   0   0   0
%!         0   0   0   0   3   3   0   6   0   0
%!         0   0   0   3   0   3   0   6   0   6
%!         1   1   0   0   0   0   0   6   6   0];
%!assert (nthargout ([1 2], @bwlabel, in, 8), {out, 6});
%!assert (nthargout ([1 2], @bwlabel, logical (in), 8), {out, 6});
%!
%!error bwlabel (rand (10, 10, 10) > 0.8, 4)
%!error bwlabel (rand (10) > 0.8, "text")
%!error bwlabel ("text", 6)
